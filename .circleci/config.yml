version: 2.1
description: Trains ci workflow
jobs:
    python3_7:
      docker:
          - image: circleci/python:3.7.4
          - image: debian:latest
      working_directory: ~/repo
      steps:
          # Step 1 : checkout source code to working directory
          - checkout
          # Step 2: create virtual env and install dependencies
          - run:
              name: install dependencies
              command: |
                python3 -m venv venv
                . venv/bin/activate
                pip install -r requirements.txt
          # Step 3: install flake8
          - run:
              name: install flake8
              command: |
                . venv/bin/activate
                pip install flake8
          # Step 4: Run example
          - run:
              name: run example for internal check
              command: |
                . venv/bin/activate
                pip install pandas
                pip install absl-py
                export PYTHONPATH=${PWD}
                cd examples
                python artifacts_toy.py |& tee -a logs.txt
                python hyper_parameters_example.py |& tee -a logs.txt
                python manual_reporting.py |& tee -a logs.txt
          # Step 5: Run codestyle
          - run:
              name: run flake8
              command: |
                . venv/bin/activate
                flake8 --exclude=venv* trains*

          - store_artifacts:
              path: examples/logs.txt

    python3_6:
      docker:
          - image: circleci/python:3.6.7
          - image: debian:latest
      working_directory: ~/repo
      steps:
          # Step 1 : checkout source code to working directory
          - checkout
          # Step 2: create virtual env and install dependencies
          - run:
              name: install dependencies
              command: |
                python3 -m venv venv
                . venv/bin/activate
                pip install -r requirements.txt
          # Step 3: install flake8
          - run:
              name: install flake8
              command: |
                . venv/bin/activate
                pip install flake8
          # Step 4: Run example
          - run:
              name: run example for internal check
              command: |
                . venv/bin/activate
                pip install pandas
                pip install absl-py
                export PYTHONPATH=${PWD}
                cd examples
                python artifacts_toy.py |& tee -a logs.txt
                python hyper_parameters_example.py |& tee -a logs.txt
                python manual_reporting.py |& tee -a logs.txt
          # Step 5: Run codestyle
          - run:
              name: run flake8
              command: |
                . venv/bin/activate
                flake8 --exclude=venv* trains*

          - store_artifacts:
              path: examples/logs.txt

    python3_5:
      docker:
          - image: circleci/python:3.6.7
          - image: debian:latest
      working_directory: ~/repo
      steps:
          # Step 1 : checkout source code to working directory
          - checkout
          # Step 2: create virtual env and install dependencies
          - run:
              name: install dependencies
              command: |
                python3 -m venv venv
                . venv/bin/activate
                pip install -r requirements.txt
          # Step 3: install flake8
          - run:
              name: install flake8
              command: |
                . venv/bin/activate
                pip install flake8
          # Step 4: Run example
          - run:
              name: run example for internal check
              command: |
                . venv/bin/activate
                pip install pandas
                pip install absl-py
                export PYTHONPATH=${PWD}
                cd examples
                python artifacts_toy.py |& tee -a logs.txt
                python hyper_parameters_example.py |& tee -a logs.txt
                python manual_reporting.py |& tee -a logs.txt
          # Step 5: Run codestyle
          - run:
              name: run flake8
              command: |
                . venv/bin/activate
                flake8 --exclude=venv* trains*

          - store_artifacts:
              path: examples/logs.txt
workflows:
  main:
    jobs:
      - "python3_5"
      - "python3_6"
      - "python3_7"

#
#
#jobs:
#  "ruby-2.2":
#    docker:
#      - image: circleci/ruby:2.2-node
#      - image: circleci/postgres:9.4.12-alpine
#    working_directory: ~/circleci-demo-workflows
#    steps:
#      - checkout
#      - run: bundle install --path vendor/bundle
#      - run: bundle exec rake db:create db:schema:load
#      - run:
#          name: Run tests
#          command: rake
#
#  "ruby-2.3":
#    docker:
#      - image: circleci/ruby:2.3-node
#      - image: circleci/postgres:9.4.12-alpine
#    working_directory: ~/circleci-demo-workflows
#    steps:
#      - checkout
#      - run: bundle install --path vendor/bundle
#      - run: bundle exec rake db:create db:schema:load
#      - run:
#          name: Run tests
#          command: rake
#
#  "ruby-2.4":
#    docker:
#      - image: circleci/ruby:2.4-node
#      - image: circleci/postgres:9.4.12-alpine
#    working_directory: ~/circleci-demo-workflows
#    steps:
#      - checkout
#      - run: bundle install --path vendor/bundle
#      - run: bundle exec rake db:create db:schema:load
#      - run:
#          name: Run tests
#          command: rake
